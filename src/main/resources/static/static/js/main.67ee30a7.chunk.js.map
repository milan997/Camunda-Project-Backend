{"version":3,"sources":["components/camunda/formcontainer/forms/Task01.js","components/camunda/formcontainer/forms/Task02.js","components/camunda/formcontainer/forms/Task03.js","components/camunda/formcontainer/forms/Task04.js","components/camunda/formcontainer/forms/Task05.js","components/camunda/formcontainer/forms/Task06.js","components/camunda/formcontainer/forms/Task07A.js","components/camunda/formcontainer/forms/Task07B.js","components/camunda/formcontainer/forms/Task08.js","components/camunda/formcontainer/forms/Task09.js","components/camunda/formcontainer/forms/Task10.js","components/camunda/formcontainer/forms/Task10A.js","components/camunda/formcontainer/forms/Task11.js","components/camunda/formcontainer/forms/Task12.js","components/camunda/formcontainer/forms/Task12A.js","components/camunda/formcontainer/forms/Task13.js","components/camunda/formcontainer/forms/Task14.js","components/camunda/formcontainer/forms/Task15.js","components/camunda/formcontainer/forms/Task16.js","components/camunda/formcontainer/forms/forms.js","ROUTES.js","components/camunda/formcontainer/FormContainer.js","components/camunda/taskitem/TaskItem.js","components/camunda/Camunda.js","components/login/Login.js","components/nav/Nav.js","components/App.js","index.js"],"names":["Task01","react_default","a","createElement","className","name","required","value","type","cam-choices","style","clear","Task02","disabled","readOnly","colSpan","Task03","handleChange","event","onChange","this","React","Component","Task04","Task05","htmlFor","Task06","Task07A","Task07B","Task08","Task09","data-assignee","Task10","for","Task10A","Task11","accept","Task12","Task12A","Task13","href","float","target","rel","min","max","Task14","Task15","Task16","getFormFromFormKey","formKey","forms_Task01","forms_Task02","forms_Task03","forms_Task04","forms_Task05","forms_Task06","forms_Task07A","forms_Task07B","forms_Task08","forms_Task09","forms_Task10","forms_Task10A","forms_Task11","forms_Task12","forms_Task12A","forms_Task13","forms_Task14","forms_Task15","forms_Task16","console","log","alert","BASE_URL","LOGIN_URL","LOGOUT_URL","TASKS_URL","MY_TASKS_URL","START_PROCESS_URL","DELETE_PROCESS_URL","FormContainer","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","form","document","querySelector","checkValidity","fileInputField","submitFileUrl","concat","task","id","formData","FormData","append","files","axios","post","withCredentials","headers","Content-Type","then","updateTasks","catch","response","selects","Array","from","querySelectorAll","filter","select","selectsDistinctValues","Set","map","length","size","elements","i","_elements$i","checked","submitFormUrl","handleDeleteProcess","url","processInstanceId","delete","loggedInUser","JSON","parse","sessionStorage","getItem","state","userIsAdmin","groups","includes","userIsAssigneeOrAdmin","assignee","refs","deleteProcessBtn","display","submitFormBtn","componentDidUpdate","_this2","GET_FORM_VARIABLES_URL","get","loadFormVariablesIntoForm","data","formVariables","_this3","forEach","field","getAttribute","camChoicesValue","list","firstChild","removeChild","option","text","add","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","entry","err","return","processVariable","downloadLink","variableUpload","downloadUrl","primedba","removeAttribute","formHolder","ref","onClick","TaskItem","_this$props$task","createTime","selected","selectTask","Camunda","setState","selectedTask","tasks","handleStartProcess","handleClaimTask","startProcessBtn","workspace","_this$state$selectedT","camunda_formcontainer_FormContainer","camunda_taskitem_TaskItem","key","Login","username","password","handleSubmit","preventDefault","logIn","error","showErrorMsg","errorMsg","hideErrorMsg","handleUsernameChange","e","handlePasswordChange","onSubmit","placeholder","Nav","handleClick","logOut","_this$props$loggedInU","firstName","lastName","src","alt","App","user","setItem","stringify","content","components_nav_Nav","components_camunda_Camunda","components_login_Login","ReactDOM","render","src_components_App","getElementById"],"mappings":"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","file":"static/js/main.67ee30a7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task01 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>ПРИЈАВА ЗА ИЗРАДУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Врста студија:</td>\r\n                        <td>\r\n                            <select name=\"tipStudija\" required>\r\n                                <option value=\"oas\">Osnovne akademske studije</option>\r\n                                <option value=\"oss\">Osnovne strukovne studije</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Име и презиме студента:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"imePrezimeStudenta\" required />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Број индекса:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"brIndeksa\" required />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијски програм:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskiProgram\" required />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијска група/подгрупа:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskaGrupa\" required />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Област из које желим да радим завршни (Bachelor) рад:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"oblast\" required />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Наставник код кога желим да радим завршни (Bachelor) рад:</td>\r\n                        <td>\r\n                            <select required\r\n                                name=\"mentor\"\r\n                                cam-choices=\"profesori\">\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <span className=\"formName\">Образац Q2.НА.11-02 - Издање 1</span>\r\n            <div style={{clear:\"both\"}}></div>\r\n        </form>);\r\n}\r\n\r\nexport default Task01;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task02 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>ПРИЈАВА ЗА ИЗРАДУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Врста студија:</td>\r\n                        <td>\r\n                            <select name=\"tipStudija\" disabled>\r\n                                <option value=\"oas\">Osnovne akademske studije</option>\r\n                                <option value=\"oss\">Osnovne strukovne studije</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Име и презиме студента:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"imePrezimeStudenta\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Број индекса:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"brIndeksa\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијски програм:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskiProgram\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијска група/подгрупа:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskaGrupa\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Област из које желим да радим завршни (Bachelor) рад:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"oblast\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Наставник код кога желим да радим завршни (Bachelor) рад:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"mentor\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <span className=\"formName\">Образац Q2.НА.11-02 - Издање 1</span>\r\n\r\n            <div style={{clear: \"both\"}}></div>\r\n            <hr />\r\n            <hr />\r\n\r\n            <h2>ЗАХТЕВ ЗА ИЗДАВАЊЕ ЗАДАТКА И ИМЕНОВАЊЕ САСТАВА КОМИСИЈЕ ЗА ОЦЕНУ И ОДБРАНУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Врста студија:</td>\r\n                        <td>\r\n                            <select name=\"tipStudija\" disabled>\r\n                                <option value=\"oas\">Osnovne akademske studije</option>\r\n                                <option value=\"oss\">Osnovne strukovne studije></option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијски програм:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskiProgram\" readOnly/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Руководилац студијског програма:</td>\r\n                        <td>\r\n                            <select\r\n                                name=\"rukovodilacSP\"\r\n                                cam-choices=\"rukovodstvo\">\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\">Молимо Вас да наведеном студенту именујте састав комисије за оцену и одбрану\r\n                            завршног\r\n                            (Bachelor) рада. Такође му одредите ментора и доставите нам наслов завршног\r\n                            (Bachelor) рада.\r\n                            Наслов завршног рада мора бити и на српском и енглеском језику.\r\n                            Комисију у саставу од 3-5 чланова чине председник комисије, члан комисије и ментор. Чланови\r\n                            комисије који су\r\n                            по правилу наставници, а изузетно се за члана комисије може одредити асистент са магистратуром\r\n                            или\r\n                            асистент – студент докторских студија који је положио квалификациони испит.\r\n                        <br />\r\n                            Молимо Вас да предлог састава комисије унесете у образац Q2.НА.11-04.\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студент:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"imePrezimeStudenta\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Број индекса:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"brIndeksa\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијска група:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskaGrupa\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Област из које студент жели да ради завршни (Bachelor) рад:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"oblast\" readOnly/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Наставник код кога студент жели да ради завршни (Bachelor) рад:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"mentor\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <span className=\"formName\">Образац Q2.НА.11-03 - Издање 1</span>\r\n            <div className=\"uslovDiv\">\r\n                <label>Uslov</label>\r\n                <input type=\"checkbox\" name=\"uslov\" />\r\n            </div>\r\n        </form>);\r\n}\r\n\r\nexport default Task02;","import React from 'react';\r\nimport './forms.css';\r\n\r\nclass Task03 extends React.Component {\r\n\r\n    handleChange = (event) => {\r\n        // console.log('event.target')\r\n        // console.log(event.target)\r\n        // const profesoriSelectFields = document.querySelector('select[cam-choices=\"profesori\"]');\r\n        // console.log('profesoriSelectFields')\r\n        // console.log(profesoriSelectFields)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"UserTaskForm\">\r\n                <h2>ЗАХТЕВ ЗА ИЗДАВАЊЕ ЗАДАТКА И ИМЕНОВАЊЕ САСТАВА КОМИСИЈЕ ЗА ОЦЕНУ И ОДБРАНУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Врста студија:</td>\r\n                            <td>\r\n                                <select name=\"tipStudija\" disabled>\r\n                                    <option value=\"oas\">Osnovne akademske studije</option>\r\n                                    <option value=\"oss\">Osnovne strukovne studije></option>\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Студијски програм:</td>\r\n                            <td>\r\n                                <input type=\"text\" name=\"studijskiProgram\" readOnly />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Руководилац студијског програма:</td>\r\n                            <td>\r\n                                <select disabled\r\n                                    name=\"rukovodilacSP\"\r\n                                    cam-choices=\"rukovodstvo\">\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan=\"2\">Молимо Вас да наведеном студенту именујте састав комисије за оцену и одбрану\r\n                                завршног\r\n                                (Bachelor) рада. Такође му одредите ментора и доставите нам наслов завршног\r\n                                (Bachelor) рада.\r\n                                Наслов завршног рада мора бити и на српском и енглеском језику.\r\n                                Комисију у саставу од 3-5 чланова чине председник комисије, члан комисије и ментор. Чланови\r\n                                комисије који су\r\n                                по правилу наставници, а изузетно се за члана комисије може одредити асистент са магистратуром\r\n                                или\r\n                                асистент – студент докторских студија који је положио квалификациони испит.\r\n                        <br />\r\n                                Молимо Вас да предлог састава комисије унесете у образац Q2.НА.11-04.\r\n                    </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Студент:</td>\r\n                            <td>\r\n                                <input type=\"text\" name=\"imePrezimeStudenta\" readOnly />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Број индекса:</td>\r\n                            <td>\r\n                                <input type=\"text\" name=\"brIndeksa\" readOnly />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Студијска група:</td>\r\n                            <td>\r\n                                <input type=\"text\" name=\"studijskaGrupa\" readOnly />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Област из које студент жели да ради завршни (Bachelor) рад:</td>\r\n                            <td>\r\n                                <input type=\"text\" name=\"oblast\" readOnly />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Наставник код кога студент жели да ради завршни (Bachelor) рад:</td>\r\n                            <td>\r\n                                <input type=\"text\" name=\"mentor\" readOnly />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <span className=\"formName\">Образац Q2.НА.11-03 - Издање 1</span>\r\n                <div style={{ clear: \"both\" }}></div>\r\n\r\n\r\n                <h2>ПРЕДЛОГ САСТАВА КОМИСИЈЕ ЗА ОЦЕНУ И ОДБРАНУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Студент:</td>\r\n                            <td>\r\n                                <input type=\"text\" name=\"imePrezimeStudenta\" readOnly />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Број индекса:</td>\r\n                            <td>\r\n                                <input type=\"text\" name=\"brIndeksa\" readOnly />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Студијски програм:</td>\r\n                            <td>\r\n                                <input type=\"text\" name=\"studijskiProgram\" readOnly />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <h3>НАСЛОВ ЗАВРШНOГ (BACHELOR) РАДА (српски):</h3>\r\n                <input type=\"text\" name=\"naslovRada\" required />\r\n\r\n                <h3>НАСЛОВ ЗАВРШНOГ (BACHELOR) РАДА (енглески):</h3>\r\n                <input type=\"text\" name=\"naslovRadaEngleski\" required />\r\n\r\n                <h2>ПРЕДЛОГ САСТАВА КОМИСИЈЕ ЗА ОЦЕНУ И ОДБРАНУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Председник:</td>\r\n                            <td>\r\n                                <select required name=\"predsednikKomisije\" cam-choices=\"profesori\" onChange={this.handleChange} />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Члан:</td>\r\n                            <td>\r\n                                <select required name=\"clanKomisije1\" cam-choices=\"profesori\" onChange={this.handleChange} />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Члан:</td>\r\n                            <td>\r\n                                <select required name=\"clanKomisije2\" cam-choices=\"profesori\" onChange={this.handleChange} />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Члан:</td>\r\n                            <td>\r\n                                <select required name=\"clanKomisije3\" cam-choices=\"profesori\" onChange={this.handleChange} />\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Ментор:</td>\r\n                            <td>\r\n                                <input type=\"text\" name=\"mentor\" readOnly />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <span className=\"formName\">Образац Q2.НА.11-04 - Издање 1</span>\r\n                <div style={{ clear: \"both\" }}></div>\r\n            </form>)\r\n    }\r\n}\r\n\r\nexport default Task03;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task04 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>ПРЕДЛОГ САСТАВА КОМИСИЈЕ ЗА ОЦЕНУ И ОДБРАНУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Студент:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"imePrezimeStudenta\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Број индекса:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"brIndeksa\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијски програм:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskiProgram\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3>НАСЛОВ ЗАВРШНOГ (BACHELOR) РАДА (српски):</h3>\r\n            <input type=\"text\" name=\"naslovRada\" readOnly />\r\n\r\n            <h3>НАСЛОВ ЗАВРШНOГ (BACHELOR) РАДА (енглески):</h3>\r\n            <input type=\"text\" name=\"naslovRadaEngleski\" readOnly />\r\n\r\n            <h2>ПРЕДЛОГ САСТАВА КОМИСИЈЕ ЗА ОЦЕНУ И ОДБРАНУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Председник:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"predsednikKomisije\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан (обавезно):</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije1\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije2\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije3\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ментор:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"mentor\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <span className=\"formName\">Образац Q2.НА.11-04 - Издање 1</span>\r\n            <div style={{ clear: \"both\" }}></div>\r\n        </form>);\r\n}\r\n\r\nexport default Task04;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task05 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>ПРЕДЛОГ САСТАВА КОМИСИЈЕ ЗА ОЦЕНУ И ОДБРАНУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Студент:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"imePrezimeStudenta\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Број индекса:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"brIndeksa\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијски програм:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskiProgram\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3>НАСЛОВ ЗАВРШНOГ (BACHELOR) РАДА (српски):</h3>\r\n            <input type=\"text\" name=\"naslovRada\" readOnly />\r\n\r\n            <h3>НАСЛОВ ЗАВРШНOГ (BACHELOR) РАДА (енглески):</h3>\r\n            <input type=\"text\" name=\"naslovRadaEngleski\" readOnly />\r\n\r\n            <h2>ПРЕДЛОГ САСТАВА КОМИСИЈЕ ЗА ОЦЕНУ И ОДБРАНУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Председник:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"predsednikKomisije\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан (обавезно):</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije1\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije2\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije3\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ментор:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"mentor\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <span className=\"formName\">Образац Q2.НА.11-04 - Издање 1</span>\r\n            <div className=\"uslovDiv\">\r\n                <label htmlFor=\"uslov\" >Uslov</label>\r\n                <input type=\"checkbox\" name=\"uslov\" />\r\n            </div>\r\n        </form>);\r\n}\r\n\r\nexport default Task05;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task06 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>ЗАДАТАК ЗА ИЗРАДУ ДИПЛОМСКОГ РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Врста студија:</td>\r\n                        <td>\r\n                            <select name=\"tipStudija\" disabled>\r\n                                <option value=\"oas\">Osnovne akademske studije</option>\r\n                                <option value=\"oss\">Osnovne strukovne studije</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијски програм:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskiProgram\" readOnly/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Руководилац студијског програма:</td>\r\n                        <td>\r\n                            <select disabled name=\"rukovodilacSP\" cam-choices=\"rukovodstvo\">\r\n                                <option value=\"ime\">ime</option>\r\n                                <option value=\"ime2\">ime2</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Студент:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"imePrezimeStudenta\" readOnly/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Број индекса:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"brIndeksa\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Област</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"oblast\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ментор:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"mentor\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\">\r\n                            НА ОСНОВУ ПОДНЕТЕ ПРИЈАВЕ, ПРИЛОЖЕНЕ ДОКУМЕНТАЦИЈЕ И ОДРЕДБИ СТАТУТА ФАКУЛТЕТА\r\n                            ИЗДАЈЕ СЕ ЗАДАТАК ЗА ЗАВРШНИ (Bachelor) РАД, СА СЛЕДЕЋИМ ЕЛЕМЕНТИМА:\r\n                            <br /> -проблем –тема рада;\r\n                            <br />-начин решавања проблема и начин практичне провере резултата рада, ако је таква провера неопходна;\r\n                            <br />-литература\r\n                    </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3>НАСЛОВ ЗАВРШНOГ (BACHELOR) РАДА:</h3>\r\n            <input type=\"text\" name=\"naslovRada\" readOnly />\r\n\r\n            <h3>ТЕКСТ ЗАДАТКА:</h3>\r\n            <textarea type=\"text\" name=\"tekstZadatka\" required ></textarea>\r\n            \r\n            <span className=\"formName\">Образац Q2.НА.11-05 - Издање 1</span>\r\n            <div style={{ clear: \"both\" }}></div>\r\n        </form>);\r\n}\r\n\r\nexport default Task06;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task07A = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h3>ТЕКСТ РАДА:</h3>\r\n            <textarea type=\"text\" name=\"tekstRada\" required ></textarea>\r\n\r\n            <h3>КОМЕНТАРИ МЕНТОРА:</h3>\r\n            <textarea type=\"text\" name=\"komentariMentora\" readOnly></textarea>\r\n        </form>);\r\n}\r\n\r\nexport default Task07A;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task07B = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h3>ТЕКСТ РАДА:</h3>\r\n            <textarea type=\"text\" name=\"tekstRada\" readOnly ></textarea>\r\n\r\n            <h3>КОМЕНТАРИ МЕНТОРА:</h3>\r\n            <textarea type=\"text\" name=\"komentariMentora\" required></textarea>\r\n\r\n            <label>Odluka</label>\r\n            <select name=\"odluka\" required>\r\n                <option name=\"dorada\">dorada</option>\r\n                <option name=\"prihvacen\">prihvacen</option>\r\n                <option name=\"obustavi\">obustavi</option>\r\n            </select>\r\n        </form>);\r\n}\r\n\r\nexport default Task07B;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task08 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h3>ЕЛАБОРАТ:</h3>\r\n            <textarea type=\"text\" name=\"elaborat\" required ></textarea>\r\n        </form>);\r\n}\r\n\r\nexport default Task08;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task09 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>ПРИМЕДБЕ КОМИСИЈЕ:</h2>\r\n            <h3>ПРЕДСЕДНИК:</h3>\r\n            <textarea className=\"primedba\" type=\"text\" name=\"primedbaPredsednik\" data-assignee=\"predsednikKomisije\" readOnly ></textarea>\r\n            <h3>ЧЛАН1:</h3>\r\n            <textarea className=\"primedba\" type=\"text\" name=\"primedbaClan1\" data-assignee=\"clanKomisije1\" readOnly ></textarea>\r\n            <h3>ЧЛАН2:</h3>\r\n            <textarea className=\"primedba\" type=\"text\" name=\"primedbaClan2\" data-assignee=\"clanKomisije2\" readOnly ></textarea>\r\n            <h3>ЧЛАН3:</h3>\r\n            <textarea className=\"primedba\" type=\"text\" name=\"primedbaClan3\" data-assignee=\"clanKomisije3\"readOnly ></textarea>\r\n        </form>);\r\n}\r\n\r\nexport default Task09;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task10 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>ПРИМЕДБЕ КОМСИЈЕ:</h2>\r\n            <h3>ПРЕДСЕДНИК:</h3>\r\n            <textarea type=\"text\" name=\"primedbaPredsednik\" readOnly ></textarea>\r\n            <h3>ЧЛАН1:</h3>\r\n            <textarea type=\"text\" name=\"primedbaClan1\" readOnly ></textarea>\r\n            <h3>ЧЛАН2:</h3>\r\n            <textarea type=\"text\" name=\"primedbaClan2\" readOnly ></textarea>\r\n            <h3>ЧЛАН3:</h3>\r\n            <textarea type=\"text\" name=\"primedbaClan3\" readOnly ></textarea>\r\n            <div className=\"uslovDiv\">\r\n                <label for=\"uslov\">Uslov</label>\r\n                <input type=\"checkbox\" name=\"uslov\" />\r\n            </div>\r\n        </form>);\r\n}\r\n\r\nexport default Task10;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task10A = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h3>КОМЕНТАРИ МЕНТОРА:</h3>\r\n            <textarea type=\"text\" required name=\"komentariMentora\"></textarea>\r\n        </form>);\r\n}\r\n\r\nexport default Task10A;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task11 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <label htmlFor=\"upload\">Upload</label>\r\n            <input type=\"file\" name=\"upload\" accept=\"application/pdf\" required/>\r\n        </form>);\r\n}\r\n\r\nexport default Task11;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task12 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>РЕШЕЊЕ О ИМЕНОВАЊУ КОМИСИЈЕ ЗА ОЦЕНУ И OДБРАНУ ЗАВРШНОГ(BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody><tr><td colSpan=\"2\">\r\n                    На основу предлога Наставно научног већа департмана, декан Факултета техничких наука је донео Решење којим је у Комисију\r\n                    заoцену иодбрану завршног (Bachelor) рада одредио наведене чланове.\r\n            </td></tr></tbody>\r\n            </table>\r\n\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Студент:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"imePrezimeStudenta\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Број индекса:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"brIndeksa\" readOnly/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Наслов завршног (bachelor) рада:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"naslovRada\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3>ЧЛАНОВИ КОМИСИЈЕ:</h3>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Председник:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"predsednikKomisije\" readOnly/>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije1\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije2\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije3\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ментор:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"mentor\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <table>\r\n                <tbody><tr>\r\n                    <td>Место одбране:</td>\r\n                    <td>\r\n                        <input type=\"text\" name=\"mestoOdbrane\" ></input>\r\n                    </td>\r\n                </tr></tbody>\r\n            </table>\r\n\r\n            <table>\r\n                <tbody><tr>\r\n                        <td>Време одбране:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"vremeOdbrane\"></input>\r\n                        </td>\r\n                </tr></tbody>\r\n            </table>\r\n\r\n            <span className=\"formName\">Образац Q2.НА.11-09 - Издање 1</span>\r\n        </form>);\r\n}\r\n\r\nexport default Task12;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task12A = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>ЗАХТЕВ ЗА ИЗДАВАЊЕ ЗАДАТКА И ИМЕНОВАЊЕ САСТАВА КОМИСИЈЕ ЗА ОЦЕНУ И ОДБРАНУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Врста студија:</td>\r\n                        <td>\r\n                            <select name=\"tipStudija\" disabled>\r\n                                <option value=\"oas\">Osnovne akademske studije</option>\r\n                                <option value=\"oss\">Osnovne strukovne studije></option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијски програм:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskiProgram\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Руководилац студијског програма:</td>\r\n                        <td>\r\n                            <select disabled\r\n                                name=\"rukovodilacSP\"\r\n                                cam-choices=\"rukovodstvo\">\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colSpan=\"2\">Молимо Вас да наведеном студенту именујте састав комисије за оцену и одбрану\r\n                            завршног\r\n                            (Bachelor) рада. Такође му одредите ментора и доставите нам наслов завршног\r\n                            (Bachelor) рада.\r\n                            Наслов завршног рада мора бити и на српском и енглеском језику.\r\n                            Комисију у саставу од 3-5 чланова чине председник комисије, члан комисије и ментор. Чланови\r\n                            комисије који су\r\n                            по правилу наставници, а изузетно се за члана комисије може одредити асистент са магистратуром\r\n                            или\r\n                            асистент – студент докторских студија који је положио квалификациони испит.\r\n                        <br />\r\n                            Молимо Вас да предлог састава комисије унесете у образац Q2.НА.11-04.\r\n                    </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студент:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"imePrezimeStudenta\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Број индекса:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"brIndeksa\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијска група:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskaGrupa\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Област из које студент жели да ради завршни (Bachelor) рад:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"oblast\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Наставник код кога студент жели да ради завршни (Bachelor) рад:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"mentor\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <span className=\"formName\">Образац Q2.НА.11-03 - Издање 1</span>\r\n\r\n\r\n            <h2>ПРЕДЛОГ САСТАВА КОМИСИЈЕ ЗА ОЦЕНУ И ОДБРАНУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Студент:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"imePrezimeStudenta\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Број индекса:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"brIndeksa\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студијски програм:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"studijskiProgram\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3>НАСЛОВ ЗАВРШНOГ (BACHELOR) РАДА (српски):</h3>\r\n            <input type=\"text\" name=\"naslovRada\" readOnly />\r\n\r\n            <h3>НАСЛОВ ЗАВРШНOГ (BACHELOR) РАДА (енглески):</h3>\r\n            <input type=\"text\" name=\"naslovRadaEngleski\" readOnly />\r\n\r\n            <h2>ПРЕДЛОГ САСТАВА КОМИСИЈЕ ЗА ОЦЕНУ И ОДБРАНУ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Председник:</td>\r\n                        <td>\r\n                            <select required name=\"predsednikKomisije\" cam-choices=\"profesori\" />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <select required name=\"clanKomisije1\" cam-choices=\"profesori\" />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <select required name=\"clanKomisije2\" cam-choices=\"profesori\" />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <select required name=\"clanKomisije3\" cam-choices=\"profesori\" />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ментор:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"mentor\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <span className=\"formName\">Образац Q2.НА.11-04 - Издање 1</span>\r\n        </form>);\r\n}\r\n\r\nexport default Task12A;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task13 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <a className=\"downloadLink\" href=\"http://google.com\" style={{ float: 'right' }} \r\n                target=\"_blank\" rel=\"noopener noreferrer\">preuzmi rad</a>\r\n\r\n            <h2>ИЗВЕШТАЈ КОМИСИЈЕ О ОЦЕНИ И ОДБРАНИ ЗАВРШНОГ (BACHELOR) РАДА</h2>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Врста студија:</td>\r\n                        <td>\r\n                            <select name=\"tipStudija\" disabled>\r\n                                <option value=\"oas\">Osnovne akademske studije</option>\r\n                                <option value=\"oss\">Osnovne strukovne studije</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Студент:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"imePrezimeStudenta\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Број индекса:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"brIndeksa\" readOnly/>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3>НАСЛОВ ЗАВРШНOГ (BACHELOR) РАДА:</h3>\r\n            <input type=\"text\" name=\"naslovRada\" readOnly />\r\n\r\n            <h3>ИЗВЕШТАЈ И ЗАКЉУЧАК КОМИСИЈЕ:</h3>\r\n            <textarea type=\"text\" required name=\"izvestajKomisije\"></textarea>\r\n\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Оцена теоријских основа завршног(Bachelor)рада:</td>\r\n                        <td>\r\n                            <input type=\"number\" min=\"6\" max=\"10\" name=\"ocenaTeorija\" required></input>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Оцена израде и одбране завршног (Bachelor) рада:</td>\r\n                        <td>\r\n                            <input type=\"number\" min=\"6\" max=\"10\" name=\"ocenaPrakticni\" required></input>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Коначна оцена завршног (Bachelor)рада:</td>\r\n                        <td>\r\n                            <input type=\"number\" min=\"6\" max=\"10\" name=\"ocenaKonacna\" required></input>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n            <h3>ЧЛАНОВИ КОМИСИЈЕ:</h3>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Председник:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"predsednikKomisije\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije1\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije2\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Члан:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"clanKomisije3\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ментор:</td>\r\n                        <td>\r\n                            <input type=\"text\" name=\"mentor\" readOnly />\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <span className=\"formName\">Образац Q2.НА.11-10 - Издање 1</span>\r\n        </form>);\r\n}\r\n\r\nexport default Task13;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task14 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>СТУДЕНТ ТРАЖИ ПОТВРДУ ОД БИБЛИОТЕКЕ</h2>\r\n        </form>);\r\n}\r\n\r\nexport default Task14;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task15 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>РЕФЕРЕНТ СТУДЕНТУ ИЗДАЈЕ ПОТВРДУ</h2>\r\n        </form>);\r\n}\r\n\r\nexport default Task15;","import React from 'react';\r\nimport './forms.css';\r\n\r\nconst Task16 = () => {\r\n    return (\r\n        <form className=\"UserTaskForm\">\r\n            <h2>РЕФЕРЕНТ УНОСИ ПОДАТКЕ</h2>\r\n        </form>);\r\n}\r\n\r\nexport default Task16;","import React from 'react';\r\n\r\nimport Task01 from './Task01';\r\nimport Task02 from './Task02';\r\nimport Task03 from './Task03';\r\nimport Task04 from './Task04';\r\nimport Task05 from './Task05';\r\nimport Task06 from './Task06';\r\nimport Task07A from './Task07A';\r\nimport Task07B from './Task07B';\r\nimport Task08 from './Task08';\r\nimport Task09 from './Task09';\r\nimport Task10 from './Task10';\r\nimport Task10A from './Task10A';\r\nimport Task11 from './Task11';\r\nimport Task12 from './Task12';\r\nimport Task12A from './Task12A';\r\nimport Task13 from './Task13';\r\nimport Task14 from './Task14';\r\nimport Task15 from './Task15';\r\nimport Task16 from './Task16';\r\n\r\n\r\nconst getFormFromFormKey = (formKey) => {\r\n    switch (formKey) {\r\n        case '/Task01.html': return <Task01 />;\r\n        case '/Task02.html': return <Task02 />;\r\n        case '/Task03.html': return <Task03 />;\r\n        case '/Task04.html': return <Task04 />;\r\n        case '/Task05.html': return <Task05 />;\r\n        case '/Task06.html': return <Task06 />;\r\n        case '/Task07A.html': return <Task07A />;\r\n        case '/Task07B.html': return <Task07B />;\r\n        case '/Task08.html': return <Task08 />;\r\n        case '/Task09.html': return <Task09 />;\r\n        case '/Task10.html': return <Task10 />;\r\n        case '/Task10A.html': return <Task10A />;\r\n        case '/Task11.html': return <Task11 />;\r\n        case '/Task12.html': return <Task12 />;\r\n        case '/Task12A.html': return <Task12A />;\r\n        case '/Task13.html': return <Task13 />;\r\n        case '/Task14.html': return <Task14 />;\r\n        case '/Task15.html': return <Task15 />;\r\n        case '/Task16.html': return <Task16 />;\r\n        default: console.log('form not found:', formKey); alert('form not found\\n' + formKey);\r\n    }\r\n}\r\n\r\nexport default getFormFromFormKey;","export const BASE_URL = 'http://localhost:8080/api';\r\nexport const FORM_BASE_URL = BASE_URL + '/forms';\r\n\r\nexport const FILE_URL = 'http://localhost:8080/data/';\r\nexport const LOGIN_URL = BASE_URL + '/login';\r\nexport const LOGOUT_URL = BASE_URL + '/logout';\r\nexport const TASKS_URL = BASE_URL + '/tasks';\r\nexport const MY_TASKS_URL = TASKS_URL + '/my-tasks';\r\nexport const START_PROCESS_URL = BASE_URL + '/processes';\r\nexport const DELETE_PROCESS_URL = BASE_URL + '/processes';\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport getFormFromFormKey from './forms/forms';\r\n\r\nimport { BASE_URL, DELETE_PROCESS_URL, FILE_URL } from '../../../ROUTES';\r\n\r\nimport './FormContainer.css';\r\n\r\nconst NAME_ATTR = \"name\";\r\nconst CHOICES_ATTR = \"cam-choices\"\r\n\r\nclass FormContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const loggedInUser = JSON.parse(sessionStorage.getItem('loggedInUser'))\r\n    \r\n        this.state = {};\r\n        this.state.loggedInUser = loggedInUser;\r\n        this.state.userIsAdmin = loggedInUser && loggedInUser.groups.includes(\"camunda-admin\")\r\n        this.state.userIsAssigneeOrAdmin = this.props.task.assignee === loggedInUser.id || this.state.userIsAdmin;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.userIsAdmin)\r\n            this.refs.deleteProcessBtn.style.display = 'block';\r\n        if (this.state.userIsAssigneeOrAdmin) \r\n            this.refs.submitFormBtn.style.display = 'block';\r\n    \r\n        this.componentDidUpdate();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const GET_FORM_VARIABLES_URL = `${BASE_URL}/tasks/${this.props.task.id}/form-variables`;\r\n        axios.get(GET_FORM_VARIABLES_URL, {withCredentials:true})\r\n            .then(response => this.loadFormVariablesIntoForm(response.data))\r\n            .catch(response => console.log({ response }));\r\n    }\r\n\r\n    loadFormVariablesIntoForm(formVariables) {\r\n        console.log({ formVariables})\r\n        const inputFields = Array.from(document.querySelectorAll('#formHolder > form input, #formHolder > form textarea'));\r\n        inputFields.forEach(field => field.value = formVariables[field.getAttribute(NAME_ATTR)] || field.value);\r\n\r\n        const selectFields = Array.from(document.querySelectorAll('#formHolder > form select'));\r\n        selectFields.forEach((field) => {\r\n            // ako select polje ima cam-choices attribut, dodeljumo mu vrednosti \r\n            const camChoicesValue = field.getAttribute(CHOICES_ATTR);\r\n            const list = formVariables[camChoicesValue];\r\n            if (camChoicesValue && list) {\r\n                // removing elements added before\r\n                while (field.firstChild)\r\n                    field.removeChild(field.firstChild);\r\n                //console.log({list})\r\n                // u slucaju da je polje clanKomsije2 ili 3 dodajemo optional\r\n                if (field.name === \"clanKomisije2\" || field.name === \"clanKomisije3\") {\r\n                    const option = document.createElement(\"option\");\r\n                    option.value = 'null';\r\n                    option.text = '';\r\n                    field.add(option, null);\r\n                }\r\n                \r\n                for(let entry of list) {\r\n                    //console.log({entry})\r\n                    const option = document.createElement(\"option\");\r\n                    option.value = entry;\r\n                    option.text = entry;\r\n                    field.add(option, null);\r\n                }   \r\n            }\r\n            // ako varijabla postoji dodeljujemo je elementu forme\r\n            const processVariable = formVariables[field.getAttribute(NAME_ATTR)];\r\n            if (processVariable)\r\n                field.value = processVariable;\r\n        });\r\n\r\n        const downloadLink = document.querySelector('#formHolder a.downloadLink');\r\n        const variableUpload = formVariables[\"upload\"];\r\n\r\n        if (downloadLink && variableUpload) {\r\n            const downloadUrl = FILE_URL + variableUpload;\r\n            downloadLink.href = downloadUrl || \"http://error.com\";\r\n        }\r\n        \r\n        const primedbe = Array.from(document.querySelectorAll('#formHolder textarea.primedba'));\r\n        primedbe.forEach((primedba) => {\r\n            const assignee = formVariables[primedba.getAttribute('data-assignee')];\r\n            if (this.state.loggedInUser.id === assignee || (assignee && this.state.userIsAdmin)) \r\n                primedba.removeAttribute('readOnly'); \r\n        });\r\n\r\n        this.refs.formHolder.style.display = 'block';\r\n    }\r\n\r\n    handleFormSubmit = (event) => {\r\n        const form = document.querySelector('#formHolder > form');\r\n        if (!form.checkValidity()) {\r\n           alert('Form is not valid!');\r\n           return;\r\n        } \r\n\r\n        const fileInputField = form.querySelector('input[type=\"file\"]');\r\n        if (fileInputField) {\r\n            const submitFileUrl = `${BASE_URL}/tasks/${this.props.task.id}/submit-file`;\r\n            const formData = new FormData();\r\n            formData.append(\"upload\", fileInputField.files[0]);\r\n            axios.post(submitFileUrl, formData, {\r\n                withCredentials: true,\r\n                headers: {'Content-Type': 'multipart/form-data'}\r\n            }).then(this.props.updateTasks)\r\n                .catch(response => console.log(response));\r\n            return;\r\n        }\r\n\r\n        // check if some selects are same and react!\r\n        const selects = Array.from(form.querySelectorAll('select[cam-choices=\"profesori\"]'))\r\n            .filter(select => select.value !== 'null');\r\n        const selectsDistinctValues = new Set(selects.map(select => select.value));\r\n        if (selects.length !== selectsDistinctValues.size) {\r\n            alert('Izabrali ste dva puta istog profesora');\r\n            return;\r\n        }\r\n\r\n        const elements = form.querySelectorAll(\"input, select, textarea\");\r\n        const formData = {};\r\n        for (let i = 0; i < elements.length; ++i) {\r\n            const { name, value, readOnly, disabled, type, checked } = elements[i];\r\n            if (name && value && !readOnly && !disabled && value !== 'null') {\r\n                formData[name] = type === \"checkbox\" ? checked : value;\r\n            }     \r\n        }\r\n        \r\n        console.log({formData})\r\n        const submitFormUrl = `${BASE_URL}/tasks/${this.props.task.id}/submit-form`;\r\n        axios.post(submitFormUrl, formData, {withCredentials:true})\r\n            .then(this.props.updateTasks)\r\n            .catch(response => console.log(response));\r\n    }\r\n\r\n    handleDeleteProcess = () => {\r\n        const url = `${DELETE_PROCESS_URL}/${this.props.task.processInstanceId}`;\r\n        axios.delete(url, { withCredentials: true })\r\n            .then(this.props.updateTasks)\r\n            .catch(response => console.log({ response }));\r\n    }\r\n\r\n    render(){\r\n        const form = getFormFromFormKey(this.props.formKey); \r\n    \r\n        return (\r\n            <div className=\"FormContainer\">\r\n                <div id=\"formHolder\" ref=\"formHolder\" style={{display:'none'}}>\r\n                    {form}\r\n                </div>\r\n                <div style={{ clear: \"both\" }}></div>\r\n                <button ref=\"submitFormBtn\" style={{ float: 'right', display: 'none' }}\r\n                    name=\"submitForm\"\r\n                    onClick={this.handleFormSubmit}>\r\n                    Submit Form\r\n                </button>\r\n                <button ref=\"deleteProcessBtn\" style={{ float: 'left', display: 'none' }}\r\n                    name=\"deleteProcess\"\r\n                    onClick={this.handleDeleteProcess}>\r\n                    DELETE TASK\r\n                </button>\r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nexport default FormContainer;","import React from 'react';\r\nimport './TaskItem.css';\r\n\r\nclass TaskItem extends React.Component {\r\n    // TODO ovo sve mozda moze da se prebije u funkc komponentu. state nam ne treba \r\n    // state = {\r\n    //     selected: this.props.selected,\r\n    // }\r\n\r\n    // selectTask = () => {\r\n    //     this.setState({selected:true});\r\n    //     this.props.selectTask(this.props.task);\r\n    // }\r\n\r\n    render() {\r\n        const { assignee, createTime, name} = this.props.task;\r\n\r\n        let className;\r\n        if (this.props.selected) \r\n            className = \"TaskItem flex-item selected\";\r\n        else\r\n            className = \"TaskItem flex-item\";\r\n        return (\r\n            <div className={className} onClick={() => this.props.selectTask(this.props.task)}>\r\n                <h3 style={{ float: 'left' }} className=\"taskTitle\">{name}</h3>\r\n                <span style={{ float: 'right ' }}>{assignee ? '♞' + assignee : 'unclaimed'}</span>\r\n                <div style={{ clear: 'both ' }}></div>\r\n                <p className=\"date\">⧗{createTime}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nimport FormContainer from './formcontainer/FormContainer';\r\nimport TaskItem from './taskitem/TaskItem';\r\nimport { MY_TASKS_URL, START_PROCESS_URL, TASKS_URL } from '../../ROUTES';\r\n\r\nimport './Camunda.css';\r\n\r\nclass Camunda extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: [],\r\n            selectedTask: false,\r\n            loggedInUser: JSON.parse(sessionStorage.getItem('loggedInUser')),\r\n        };\r\n        \r\n    }\r\n    \r\n    selectTask = (task) => {\r\n        this.setState({selectedTask: task});\r\n    }\r\n\r\n    componentDidMount() {\r\n        // ako je ulogovani user student, dajemo mu dugme da pokrene proces\r\n        const loggedInUser = this.state.loggedInUser;\r\n        const userIsStudent = (loggedInUser.groups[0] === \"student\" || loggedInUser.groups[0] === \"camunda-admin\");\r\n        if (userIsStudent)\r\n            this.refs.startProcessBtn.style.display = 'block';\r\n\r\n        this.updateTasks();\r\n    }\r\n\r\n    updateTasks = () => {\r\n        axios.get(MY_TASKS_URL, { withCredentials: true })\r\n            .then(response => {\r\n                this.setState({ tasks: response.data, selectedTask: false });\r\n            })\r\n            .catch(response => console.log({response}));\r\n    }\r\n\r\n    handleStartProcess = () => {\r\n        axios.post(START_PROCESS_URL, {}, { withCredentials: true })\r\n            .then(this.updateTasks)\r\n            .catch(console.log);\r\n    }\r\n\r\n    handleClaimTask = () => {\r\n        const url = `${TASKS_URL}/${this.state.selectedTask.id}/claim`;\r\n        axios.post(url, {}, { withCredentials: true })\r\n            .then(this.updateTasks)\r\n            .catch(console.log);\r\n    }\r\n\r\n    render() {\r\n        let workspace = <div className=\"WorkSpace\"></div>;\r\n        if (this.state.selectedTask) {\r\n            const { name, createTime, assignee, formKey } = this.state.selectedTask;\r\n            workspace = (\r\n                <div className=\"WorkSpace\">\r\n                    <span style={{ float: 'right' }}>{assignee  \r\n                        ? '♞' + assignee \r\n                        : <button \r\n                            ref=\"claimTaskBtn\"\r\n                            name=\"claimTask\"\r\n                            onClick={this.handleClaimTask}>\r\n                            Claim\r\n                            </button>}\r\n                    </span>\r\n                    <h3 style={{ float: 'left' }} className=\"title\">{name}</h3>\r\n                    <div style={{ clear: 'both' }} />\r\n                    <p className=\"date\">⧗{createTime}</p>\r\n                    <FormContainer updateTasks={this.updateTasks} task={this.state.selectedTask} formKey={formKey} />\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <main className=\"Camunda\">\r\n\r\n                <div className=\"TaskList\">\r\n                    <button ref=\"startProcessBtn\" style={{ display: 'none' }} className=\"start-process-btn\" onClick={this.handleStartProcess}>Zapocni prijavu</button>\r\n                    <div className=\"flex-container\">\r\n                        {this.state.tasks.map(task => {\r\n                            const selected = task.id === this.state.selectedTask.id;\r\n                            return (\r\n                                <TaskItem\r\n                                    key={task.id}\r\n                                    selected={selected}\r\n                                    task={task}\r\n                                    selectTask={this.selectTask} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {workspace}\r\n                \r\n    \r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Camunda;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {LOGIN_URL} from '../../ROUTES'\r\n\r\nimport './Login.css';\r\n\r\nclass Login extends React.Component {\r\n  state = { username: '', password: '' }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // TODO prebaciti login logiku na App komponentu, ima vise smisla\r\n    // logout cemo uraditi tamo odma\r\n    axios.post(LOGIN_URL, this.state, { withCredentials: true })\r\n      .then(response => {\r\n        this.props.logIn(response.data);\r\n      })\r\n      .catch(error => this.showErrorMsg());\r\n  }\r\n\r\n  showErrorMsg = () => this.refs.errorMsg.style.display = 'block';\r\n  hideErrorMsg = () => this.refs.errorMsg.style.display = 'none';\r\n\r\n  handleUsernameChange = (e) => this.setState({ username: e.target.value });\r\n  handlePasswordChange = (e) => this.setState({ password: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input onClick={this.hideErrorMsg} onChange={this.handleUsernameChange}\r\n            type=\"text\" id=\"username\" name=\"username\" placeholder=\"username\" />\r\n          <input onClick={this.hideErrorMsg} onChange={this.handlePasswordChange}\r\n            type=\"password\" id=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password} />\r\n          <p ref=\"errorMsg\" style={{ display: 'none' }}>unauthorized</p>\r\n          <button name=\"login\" value=\"login\" type=\"submit\" >login</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { LOGOUT_URL } from '../../ROUTES';\r\n\r\nimport './Nav.css';\r\n\r\nclass Nav extends React.Component { \r\n\r\n  handleClick = () => {\r\n    // axios.post(url[, data[, config]])\r\n    axios.post(LOGOUT_URL, {}, { withCredentials: true });\r\n    this.props.logOut();\r\n  } \r\n\r\n  render() {\r\n    const {firstName, lastName} = this.props.loggedInUser;\r\n    return (\r\n      <nav className=\"Nav\">\r\n        <ul>\r\n          <li style={{ float: 'left' }}>\r\n            <a href=\"#top\">\r\n              <img style={{ float: 'left' }} src={\"../../logo.png\"} alt=\"logo\" />\r\n              <span style={{ float: 'right' }}>camunda tasklist</span>\r\n            </a>\r\n          </li>\r\n          <li style={{ float: 'right' }}>\r\n            <div className=\"dropdown\">\r\n              <a href=\"#top\" >♞{firstName + ' ' + lastName}</a>\r\n              <a className=\"dropdown-content\" href=\"#top\" onClick={this.handleClick} >logout</a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;","import React from 'react';\n\nimport Camunda from './camunda/Camunda';\nimport Login from './login/Login';\nimport Nav from './nav/Nav';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loggedInUser: JSON.parse(sessionStorage.getItem('loggedInUser')),\n      // loggedInUser: {\n      //   id: 'demo',\n      //   firstName: 'demo',\n      //   lastName: 'demo',\n      //   email: 'demo',\n      // },\n    }\n  }\n\n  logIn = (user) => {\n    sessionStorage.setItem(\"loggedInUser\", JSON.stringify(user));\n    this.setState({ loggedInUser: user });\n\n  }\n  logOut = () => {\n    sessionStorage.setItem(\"loggedInUser\", null);\n    this.setState({ loggedInUser: null });\n  }\n\n  render() {\n    // console.log('oooh erneesto');\n    \n    const loggedInUser = this.state.loggedInUser;\n    \n    const content = loggedInUser ?\n          [\n            <Nav logOut={this.logOut} loggedInUser={loggedInUser} key=\"Nav\" />,\n            <Camunda key=\"Camunda\" />\n          ]\n          :\n          <Login logIn={this.logIn} />;\n\n    return (\n      <div className=\"App\">\n        {content}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}